{"THEME_REVEAL_CONGIF_TRANSITION": "cube", "LICENSE": "", "text": "<html><body><p>In my <a href=\"http://adamreid.ca/2012/05/15/Kickstarting-Puppet-On-Centos4/\">previous post</a> I explained one way to get <a href=\"http://puppetlabs.com/\">puppet</a> running on CentOS 4 / RedHat ES-4 using a kickstart. Building from that kickstart, I am going to show how to set up a <a href=\"https://www.virtualbox.org/\">VirtualBox</a> VM suitable for use with <a href=\"http://vagrantup.com/\">Vagrant</a>. Although I focus on a dated distribution here, these instructions can be applied to other distributions pretty easily. The kickstart can only be used by distributions that support kickstart installations. That means any RedHat or CentOS and possibly others with modifications.</p>\n<p>If you don't know why you might want to use <a href=\"http://vagrantup.com/\">Vagrant</a> I will briefly explain. Vagrant is a tool that combines virtualization via VirtualBox with configuration management via <a href=\"http://puppetlabs.com/\">Puppet</a> and/or <a href=\"http://www.opscode.com/chef/\">Chef</a> to let you create reproducible development environments. You write a <code>Vagrantfile</code> that tells vagrant what your machine should look like and what puppet/chef configurations to apply. This means you don't need to keep a lot of VM's around when they aren't being used. Instead you can re-create the machine with vagrant when you need it, and destroy it when you're done. It has some nice features such as automatic ssh forwarding, optional port forwarding of other services (http for example), and automatic folder sharing. This last one is really nice, as it lets you write an application on your PC with whatever tools you would normally use and automatically have the code available in a VM for testing.</p>\n<p>In this kickstart I don't provide Chef, although it can be added with <code>gem install chef --no-doc --no-ri</code> if you would like it to be included in your images.</p>\n<h3>The set up</h3>\n<p>For this to work you are going to need the following things on your PC. I will not go into the details of installing VirtualBox or Vagrant, they both have excellent documentation available.</p>\n<ul><li><a href=\"https://www.virtualbox.org/\">VirtualBox</a></li>\n<li><a href=\"http://vagrantup.com/\">Vagrant</a></li>\n<li>A terminal</li>\n<li>A CentOS / RedHat 4 DVD iso</li>\n<li>A web server, I use Python 2.7 and <code>python -m 'http.server'</code></li>\n</ul><p>When VirtualBox is installed, copy (or link), the <code>VBoxGuestAdditions.iso</code> file into a directory to work in. For linux hosts you can usually find it in <code>/usr/lib/virtualbox/additions</code>, for Mac OS hosts it will be in <code>/Applications/VirtualBox.app/MacOS/</code>. Grab a copy of the latest <a href=\"https://raw.github.com/adamreid/kickstarts/master/puppet-es4-vagrant-ks.cfg\">kickstart</a> from github. Serve these files via http using your favourite web server. I\nuse Python and it's <code>http.server</code> module for Python 2.7 or <code>SimpleHTTPServer</code> for versions &lt; 2.7.</p>\n<div class=\"code\"><pre>areid <span class=\"nv\">$ </span><span class=\"nb\">cd</span> ~/kickstarts/puppet\npuppet <span class=\"nv\">$ </span>ln -s /usr/lib/virtualbox/additions/VBoxGuestAdditions.iso .\npuppet <span class=\"nv\">$ </span>wget https://raw.github.com/adamreid/kickstarts/master/puppet-es4-vagrant-ks.cfg\npuppet <span class=\"nv\">$ </span>python -m <span class=\"s1\">'http.server'</span>\nServing HTTP on 0.0.0.0 port 8000 ...\n</pre></div>\n\n\n<h3>The kickstart</h3>\n<p>This kickstart is an extension of the <a href=\"http://adamreid.ca/2012/05/15/Kickstarting-Puppet-On-Centos4/\">puppet-es4</a> with the addition of a few steps to ready it for <a href=\"http://vagrantup.com/\">vagrant</a> and the disabling of a few services that I would consider unnecessary for the VM's intended purpose.</p>\n<p>Most changes here are to conform to the conventions outlined in the <a href=\"http://vagrantup.com/docs/base_boxes.html\">Vagrant base box</a> documentation. Specifically:\n<em> The root password is changed to vagrant.\n</em> The vagrant user is added to the admin group.\n<em> The admin group is given passwordless sudo access.\n</em> The vagrant user's <code>.ssh/authorized_keys</code> file contains a known (insecure) key for pubkey authentication.\n* The VirtualBox guest additions are installed.</p>\n<p>A final step is then run to help keep the size of the exported vagrant box down. A file is created in <code>/tmp</code> and filled with 0's until the disk runs out of space, then is deleted. This step is optional. If you are doing repeated testing of the kickstart, this step should be commented out to save time.</p>\n<div class=\"code\"><pre><span class=\"c\"># Kickstart file for Puppet on CentOS 4/RedHat ES-4</span>\n<span class=\"c\"># Tested on ES-4 U8 / CentOS 4.8</span>\n<span class=\"c\"># May work on older enterprise 4 systems.</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># Adam Reid</span>\n<span class=\"c\"># http://github.com/adamreid/kickstarts/puppet-es4-ks.cfg</span>\n\ninstall\ncdrom\nlang en_US.UTF-8\nlangsupport --default<span class=\"o\">=</span>en_US.UTF-8 en_US.UTF-8\nkeyboard us\nxconfig --card <span class=\"s2\">\"VESA driver (generic)\"</span> --videoram 12288 --hsync 31.5-37.9 --vsync 50-70 --resolution 800x600 --depth 16\nnetwork --device eth0 --bootproto dhcp\nrootpw vagrant\nfirewall --disabled\nselinux --disabled\nauthconfig --enableshadow --passalgo<span class=\"o\">=</span>md5\ntimezone --utc America/New_York\nbootloader --location<span class=\"o\">=</span>mbr\n<span class=\"c\"># The following is the partition information you requested</span>\n<span class=\"c\"># Note that any partitions you deleted are not expressed</span>\n<span class=\"c\"># here so unless you clear all partitions first, this is</span>\n<span class=\"c\"># not guaranteed to work</span>\nclearpart --all --drives<span class=\"o\">=</span>sda\npart /boot --fstype ext3 --size<span class=\"o\">=</span>100 --ondisk<span class=\"o\">=</span>sda\npart pv.2 --size<span class=\"o\">=</span>0 --grow --ondisk<span class=\"o\">=</span>sda\nvolgroup VolGroup00 --pesize<span class=\"o\">=</span>32768 pv.2\nlogvol swap --fstype swap --name<span class=\"o\">=</span>LogVol01 --vgname<span class=\"o\">=</span>VolGroup00 --size<span class=\"o\">=</span>512 --grow --maxsize<span class=\"o\">=</span>1024\nlogvol / --fstype ext3 --name<span class=\"o\">=</span>LogVol00 --vgname<span class=\"o\">=</span>VolGroup00 --size<span class=\"o\">=</span>1024 --grow\n\n%packages\nlvm2\nkernel\ne2fsprogs\ngrub\n\n<span class=\"c\"># required to build ruby</span>\n<span class=\"c\"># should be kept for gems that build native extensions.</span>\nautomake\ngcc\ncpp\nglibc-devel\nglibc-headers\nglibc-kernheaders\nglibc\nglibc-common\nlibgcc\n\n<span class=\"c\"># required to build ruby bindings, can be removed after</span>\nzlib-devel\nopenssl-devel\nreadline-devel\n\n%post\n\n<span class=\"c\"># Change to a vt to see progress</span>\n\n<span class=\"nb\">exec</span> &lt; /dev/tty3 &gt; /dev/tty3\nchvt 3\n\n<span class=\"c\"># redirect output to ks-post.log including stdout and stderr</span>\n<span class=\"o\">(</span>\n    <span class=\"c\">#######################################################</span>\n    <span class=\"c\"># Build Ruby</span>\n    <span class=\"c\">#######################################################</span>\n\n    <span class=\"c\"># Keep it clean</span>\n    mkdir /tmp/ruby\n    <span class=\"nb\">cd</span> /tmp/ruby\n\n    <span class=\"c\"># autoconf 2.60 is required to build ruby</span>\n    wget http://ftp.gnu.org/gnu/autoconf/autoconf-2.60.tar.gz\n    tar -xzf autoconf-2.60.tar.gz\n    <span class=\"nb\">cd </span>autoconf-2.60\n    ./configure --prefix<span class=\"o\">=</span>/usr <span class=\"o\">&amp;&amp;</span> make <span class=\"o\">&amp;&amp;</span> make install\n    <span class=\"nb\">cd</span> /tmp/ruby\n\n    <span class=\"c\"># build ruby-1.8.7-p358</span>\n    wget http://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.7-p358.tar.bz2\n    tar -xjf ruby-1.8.7-p358.tar.bz2\n    <span class=\"nb\">cd </span>ruby-1.8.7-p358\n    autoconf\n    ./configure --prefix<span class=\"o\">=</span>/usr <span class=\"o\">&amp;&amp;</span> make <span class=\"o\">&amp;&amp;</span> make install\n    <span class=\"nb\">cd</span> /tmp/ruby\n\n    <span class=\"c\"># install ruby-gems 1.8.10</span>\n    wget http://production.cf.rubygems.org/rubygems/rubygems-1.8.10.tgz\n    tar -xzf rubygems-1.8.10.tgz\n    <span class=\"nb\">cd </span>rubygems-1.8.10\n    /usr/bin/ruby setup.rb\n\n    <span class=\"c\"># clean up</span>\n    <span class=\"nb\">cd</span> /\n    rm -rf /tmp/ruby\n\n    <span class=\"c\">#######################################################</span>\n    <span class=\"c\"># Install Puppet</span>\n    <span class=\"c\">#######################################################</span>\n    gem install puppet --no-rdoc --no-ri\n\n    <span class=\"c\"># add the puppet group</span>\n    groupadd puppet\n\n    <span class=\"c\">#######################################################</span>\n    <span class=\"c\"># Install VirtualBox Guest Additions</span>\n    <span class=\"c\">#</span>\n    <span class=\"c\"># Note: You will need to provide a copy of the</span>\n    <span class=\"c\"># VirtualBoX Guest Addititons iso on a web server.</span>\n    <span class=\"c\">#######################################################</span>\n    <span class=\"nb\">cd</span> /tmp\n    wget http://192.168.1.3:8000/VBoxGuestAdditions.iso\n    mkdir /tmp/isomount\n    mount -t iso9660 -o loop /tmp/VBoxGuestAdditions.iso /tmp/isomount\n\n    /tmp/isomount/VBoxLinuxAdditions.run\n    umount isomount\n    rm VBoxGuestAdditions.iso\n\n    <span class=\"c\">#######################################################</span>\n    <span class=\"c\"># Turn off un-needed services</span>\n    <span class=\"c\">#######################################################</span>\n    chkconfig sendmail off\n    chkconfig vbox-add-x11 off\n    chkconfig smartd off\n    chkconfig ntpd off\n    chkconfig cupsd off\n\n    <span class=\"c\">#######################################################</span>\n    <span class=\"c\"># Setup for Vagrant</span>\n    <span class=\"c\">#######################################################</span>\n    groupadd admin\n    useradd -g admin vagrant\n    <span class=\"nb\">echo</span> <span class=\"s1\">'Defaults env_keep=\"SSH_AUTH_SOCK\"'</span> &gt;&gt; /etc/sudoers\n    <span class=\"nb\">echo</span> <span class=\"s1\">'%admin    ALL=NOPASSWD: ALL'</span> &gt;&gt; /etc/sudoers\n\n    <span class=\"c\"># Add vagrant insecure private key for key auth</span>\n    <span class=\"c\"># Make your own if this is private.</span>\n    <span class=\"c\"># See http://vagrantup.com/docs/base_boxes.html</span>\n    mkdir /home/vagrant/.ssh\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key\"</span> &gt; /home/vagrant/.ssh/authorized_keys\n\n    <span class=\"c\"># Clean up unused disk space so compressed image is smaller.</span>\n    cat /dev/zero &gt; /tmp/zero.fill\n    rm /tmp/zero.fill\n\n    <span class=\"c\">#######################################################</span>\n    <span class=\"c\"># The system can now be packaged with </span>\n    <span class=\"c\"># `vagrant package VMNAME`</span>\n    <span class=\"c\">#######################################################</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'You can now package this box with `vagrant package VMNAME`'</span>\n\n<span class=\"o\">)</span> 2&gt;&amp;1 | /usr/bin/tee /root/ks-post.log\n\n<span class=\"c\"># switch back to gui</span>\nchvt 7\n</pre></div>\n\n\n<h3>Creating the Vagrant Image</h3>\n<p>Now that the kickstart has been installed it is ready to be packaged as a vagrant base box.</p>\n<p>I named my base image <em>vagrant-es4</em> in VirtualBox, so when following this example make sure to replace my VM name with yours.</p>\n<div class=\"code\"><pre>puppet <span class=\"nv\">$ </span>vagrant package --base vagrant-es4\npuppet <span class=\"nv\">$ </span>vagrant box add es4base package.box\n</pre></div>\n\n\n<p>The image is now ready for you to use in your own vagrant images. Create a new vagrant configuration to test the base image with.</p>\n<div class=\"code\"><pre>puppet <span class=\"nv\">$ </span><span class=\"nb\">cd</span> ~/vms\nvms <span class=\"nv\">$ </span>mkdir es4test\nvms <span class=\"nv\">$ </span><span class=\"nb\">cd </span>es4test\nvms <span class=\"nv\">$ </span>vagrant init es4base\nvms <span class=\"nv\">$ </span>vagrant up\nvms <span class=\"nv\">$ </span>vagrant ssh\n</pre></div>\n\n\n<p>The last command <code>vagrant ssh</code> gives you shell access to the virtual machine you just created. If you look in the machines <code>/vagrant</code> directory you will notice that your <code>Vagrantfile</code> is there. This is a VirtualBox \"shared folder\" that is provided for you by vagrant. The directory it's sharing is the same directory that <code>vagrant init</code> was run inside of in the steps above. </p>\n<p>When developing an application you can see how this little convenience will make a big difference in testing your application in a virtual environment. You just create a <code>Vagrantfile</code> with the configuration you require, spin up the VM, and run your application from the shared folder. Keeping the <code>Vagrantfile</code> in source with your application will remind you to keep it up to date as the applications requirements change, and makes it easy for new developers to quickly set up a known-good environment to test in.</p></body></html>", "ARCHIVE_FILENAME": "archive.html", "THEME_REVEAL_CONGIF_SUBTHEME": "sky", "message_Read more": "Read more", "SITE_URL": "http://adamreid.ca", "LISTINGS_FOLDER": "listings", "INDEXES_PAGES": "", "next": false, "message_Next post": "Next post", "BLOG_DESCRIPTION": "Sporratic updates from Adam", "EXTRA_HEAD_DATA": "", "DEFAULT_LANG": "en", "disqus_html": "<div id=\"disqus_thread\"></div> <script type=\"text/javascript\">var disqus_shortname=\"False\";var disqus_url=\"http://adamreid.ca/posts/Kickstarting-Vagrant-On-Centos4.html\";(function(){var a=document.createElement(\"script\");a.type=\"text/javascript\";a.async=true;a.src=\"http://\"+disqus_shortname+\".disqus.com/embed.js\";(document.getElementsByTagName(\"head\")[0]||document.getElementsByTagName(\"body\")[0]).appendChild(a)})();        </script><noscript>Please enable JavaScript to view the <a href=\"http://disqus.com/?ref_noscript\">comments powered by DISQUS.</a></noscript><a href=\"http://disqus.com\"class=\"dsq-brlink\">comments powered by <span class=\"logo-disqus\">DISQUS</span></a>", "RSS_PATH": "", "title": "Kickstarting a CentOS / RedHat 4 Vagrant Image", "SEARCH_FORM": "", "message_Tags": "Tags", "INDEX_PATH": "", "BLOG_AUTHOR": "Adam Reid", "message_Older posts": "Older posts", "OUTPUT_FOLDER": "../adamreid.github.com", "message_Original site": "Original site", "ANALYTICS": "", "BLOG_EMAIL": "adam@adamreid.ca", "message_Posts for year %s": "Posts for year %s", "message_old posts page %d": "old posts page %d", "BLOG_TITLE": "adamreid.ca", "message_Posted": "Posted", "GALLERY_PATH": "galleries", "CODE_COLOR_SCHEME": "default", "message_Read in English": "Read in English", "CACHE_FOLDER": "cache", "tags": [{"link": "/categories/puppet-centos-vagrant.html", "name": "puppet centos vagrant"}], "tags?": true, "__file__": "conf.pyc", "translations": [], "CONTENT_FOOTER": "Contents &copy; 2013 <a href=\"mailto:adam@adamreid.ca\">Adam Reid</a> - Powered by <a href=\"http://nikola.ralsina.com.ar\">Nikola</a>", "BASE_URL": "http://adamreid.ca", "THEME": "custom", "message_Also available in": "Also available in", "message_Previous post": "Previous post", "date": "2012-05-21 00:00", "__name__": "conf", "message_Posts about %s": "Posts about %s", "message_Posts for {month} {year}": "Posts for {month} {year}", "message_More posts about": "More posts about", "ARCHIVE_PATH": "", "DATE_FORMAT": "%Y-%m-%d %H:%M", "TAG_PATH": "categories", "prev": "/posts/Kickstarting-Puppet-On-Centos4.json", "message_Newer posts": "Newer posts", "message_LANGUAGE": "English", "MATHJAX_CONFIG": "", "message_Archive": "Archive", "message_Source": "Source", "INDEXES_TITLE": ""}